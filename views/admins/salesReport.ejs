<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Admin | Sales Report</title>
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/admin/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin/css/main.css" rel="stylesheet" type="text/css" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">

    <link href="/admin/css/styles.css" rel="stylesheet" type="text/css" />
    <link href="/admin/css/pdfstyles.css" rel="stylesheet" type="text/css" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.4/xlsx.full.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">

</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="#" class="brand-wrap">
                <img src="/admin/imgs/theme/logo.png" class="logo" alt="Admin Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/sales-report"> <i class="icon material-icons md-assignment"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
                <li class="menu-item  ">
                    <a class="menu-link" href="/admin/user-details?page=1"> <i class="icon material-icons md-person"></i>
                        <span class="text">User Details</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>

                </li>

                <li class="menu-item ">
                    <a class="menu-link" href="/admin/categories"> <i class="icon material-icons md-category"></i>
                        <span class="text">Categories</span>
                    </a>

                </li>

                <li class="menu-item ">
                    <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>

                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/coupons?page=1"> <i
                            class="icon material-icons material-icons md-card_giftcard"></i>
                        <span class="text">Coupons</span>
                    </a>

                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/offers?page=1"> <i
                            class="icon material-icons material-icons md-local_offer"></i>
                        <span class="text">Offers</span>
                    </a>

                </li>
                <!--                 
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-sellers-cards.html"> <i class="icon material-icons md-store"></i>
                        <span class="text">Sales</span>
                    </a>
                    <div class="submenu">
                        <a href="page-sellers-cards.html">Sellers cards</a>
                        <a href="page-sellers-list.html">Sellers list</a>
                        <a href="page-seller-detail.html">Seller profile</a>
                    </div>
                </li>
            
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-form-product-1.html"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Banners</span>
                    </a>
                    <div class="submenu">
                        <a href="page-form-product-1.html">Add product 1</a>
                        <a href="page-form-product-2.html">Add product 2</a>
                        <a href="page-form-product-3.html">Add product 3</a>
                        <a href="page-form-product-4.html">Add product 4</a>
                    </div>
                </li>
                  -->
            </ul>
            <hr>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/logout"> <i class="icon material-icons md-settings"></i>
                        <span class="text">Logout</span>
                    </a>
                </li>
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i
                                class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                        class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i
                                class="material-icons md-cast"></i></a>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount"
                            aria-expanded="false"> <img class="img-xs rounded-circle"
                                src="/admin/imgs/people/avatar2.jpg" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account
                                Settings</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="/admin/logout"><i
                                    class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>

        <section class="content-main">
            <!-- <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Sales Data</h2>
                    <p>Whole data about your business here</p>
                </div>

            </div> -->
            <!-- <div class="row">
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-primary-light">â‚¹
                            </span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Total Revenue</h6>
                                <span>&#8377 <%= (totalPriceSum-couponDiscountSum).toLocaleString() %></span>
                                <span class="text-sm">
                                    Shipping fees are not included
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-success-light"><i
                                    class="text-success material-icons md-local_shipping"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Delivered Orders</h6> <span>
                                    <%= allOrders.length%>
                                </span>
                                <span class="text-sm">
                                    Excluding orders in transit
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-warning-light"><i
                                    class="text-warning material-icons md-qr_code"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Products</h6> <span>
                                    <%= allProducts.length%>
                                </span>
                                <span class="text-sm">
                                    In <%= allCategories.length%> Categories
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-info-light"><i
                                    class="text-info material-icons md-people"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Active Users</h6> <span>
                                    <%= allUsers.length%>
                                </span>
                                <span class="text-sm">
                                    Based on activity
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
            </div> -->


            <div class="card mb-4">
                <header class="card-header">
                    <div class="content-header">
                        <div>
                            <h3 class="content-title card-title">Sales Report </h3>
                            <p>Whole data about your business here</p>

                        </div>
                        <div>
                            <a id="generate-pdf" class="btn btn-primary" ><i
                                    class="text-muted material-icons md-post_add"
                                    ></i>Generate PDF</a>
                            <a id="generate-excel" class="btn btn-primary"><i
                                    class="text-muted material-icons md-post_add"></i>Generate Excel</a>
                            
                        </div>
                        <script>
                            const generatePdfButton = document.getElementById('generate-pdf');
                            generatePdfButton.addEventListener('click', async (event) => {
                                event.preventDefault();
                                const startDate = document.getElementById('start_date').value;
                                const endDate = document.getElementById('end_date').value;

                                if (!startDate || !endDate) {
                                    $.toast({
                                        heading: 'Error',
                                        text: 'Please select both start and end dates.',
                                        icon: 'error',
                                        position: "top-center",
                                        hideAfter: 5000
                                    });
                                    return;
                                }

                                //   const controller = new AbortController();
                                //   const timeout = setTimeout(() => controller.abort(), 10000); // 10 seconds

                                try {
                                    const response = await fetch(`/admin/generate-sales-report-pdf`, {
                                        method: 'POST',
                                        body: JSON.stringify({ startDate, endDate }),
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                    });


                                    if (response.ok) {
                                        const blob = await response.blob();
                                        const url = window.URL.createObjectURL(blob);
                                        window.open(url, '_blank'); 
                                    } else {
                                        console.error('Error fetching sales report:', response.status);
                                    }
                                } catch (error) {
                                    console.error('Error:', error);
                                }
                            });
                        </script>
                        <!-- <script>
                            const generatePdfButton = document.getElementById('generate-pdf');
                            generatePdfButton.addEventListener('click', async (event) => {
                                event.preventDefault();
                                const startDate = document.getElementById('start_date').value;
                                const endDate = document.getElementById('end_date').value;

                                if (!startDate || !endDate) {
                                    $.toast({
                                        heading: 'Error',
                                        text: 'Please select both start and end dates.',
                                        icon: 'error',
                                        position: "top-center",
                                        hideAfter: 5000
                                    });
                                    return;
                                }

                                //   const controller = new AbortController();
                                //   const timeout = setTimeout(() => controller.abort(), 10000); // 10 seconds

                                try {
                                    const response = await fetch(`/admin/generate-sales-report-pdf`, {
                                        method: 'POST',
                                        body: JSON.stringify({ startDate, endDate }),
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        signal: controller.signal,
                                    });

                                    clearTimeout(timeout);

                                    if (response.ok) {
                                        const { pdfFilePath } = await response.json();
                                        // Construct the download URL
                                        const downloadUrl = `/download?file=${pdfFilePath.replace(__dirname, '')}`;
                                        // Open the download URL in a new tab
                                        window.open(downloadUrl, '_blank');
                                    } else {
                                        console.error('Error fetching sales report:', response.status);
                                    }
                                } catch (error) {
                                    console.error('Error:', error);
                                }
                            });
                        </script> -->
                    </div>
                    <div class="row align-items-center">
                        <!-- <div class="col-md-3 col-12 me-auto mb-md-0 mb-3">
                            <div class="custom_select">
                                <select class="form-select select-nice">
                                    <option selected>All Categories</option>
                                    <% allCategories.forEach(category => { %>
                                        <option><%= category.categoryName %></option>
                                        <% }) %>
                                   
                                </select>
                            </div>
                        </div> -->

                        <div class="col-md-2 col-12">
                            <label for="start_date">Start Date:</label>
                            <input type="date" id="start_date" class="form-control" onchange="updateReportDuration()">
                        </div>
                        <div class="col-md-2 col-12">
                            <label for="end_date">End Date:</label>
                            <input type="date" id="end_date" class="form-control" onchange="updateReportDuration()">
                        </div>

                        <div class="col-md-2 col-12">
                            <label for="preset_range">Select Range:</label>
                            <select id="preset_range" name="preset_range" class="form-select"
                                onchange="updateReportDuration()">
                                <option>None</option>
                                <option value="1_day">Today</option>
                                <option value="1_week">Last Week</option>
                                <option value="1_month">Last Month</option>
                                <option value="1_year">Last Year</option>
                            </select>
                        </div>
                        <!-- <div class="col-md-2 col-6">
                            <div class="custom_select ">
                                <label for="sort">Sort By:</label>
                                <select class="form-select select-nice1 " id="sort">
                                    <option selected>Quantity Sold</option>
                                    <option>Product Revenue</option>

                                </select>
                            </div>
                        </div> -->
                        <div class="col-md-4 col-12">
                            <a class="btn btn-primary generate-report" id="generate-report" style="margin-top: 22px;">
                                <i class="text-muted material-icons md-post_add"></i>Generate Report
                            </a>
                        </div>
                    </div>
                </header>
                <div id="sales-data-report" style="padding-left: 30px; padding-right: 30px; height: fit-content;">
                    <div class="card-body ">
                        <div id="report_duration" style="padding-bottom: 2%;">
                            Report Duration:
                        </div>
                        <div class="table-responsive   table-container" style="max-height: 500px; overflow-y: scroll;">
                            <div class=" table-responsive">
                                <table class=" align-middle table table-nowrap mb-0 " id="pdfTable">
                                    <thead class="table-light  ">
                                        <tr>
                                            <th scope="col" class="text-center">Sl No.</th>
                                            <th scope="col">Order ID</th>
                                            <th scope="col">Product</th>
                                            <th scope="col">Order Date</th>
                                            <th scope="col">Qty</th>
                                            <th scope="col">Total Amount</th>
                                            <th scope="col">Discounts P/C</th>
                                            <th scope="col">Amount After Discount</th>
                                            <th scope="col">Payment Method</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        <% allOrdersUnwinded.forEach((order,index)=> { %>
                                            <tr>
                                                <td class="text-center">
                                                    <%= index+1 %>
                                                </td>
                                                <td><a href="#" class="fw-bold">#<%= order.orderId %></a> </td>
                                                <td>
                                                    <% var
                                                        productNameWords=order.orderProducts.prodDetails[0].productName.split(" "); %>

                                                    <%= productNameWords.slice(0, 3).join(" ") %>
                                                </td>
                                                <td>
                                                    <%= order.orderDate %>
                                                </td>
                                                <td>
                                                    <%= order.orderProducts.quantity %>
                                                </td>
                                               
                                                <td>&#8377 <%= (order.orderProducts.totalPriceWithoutOffer).toLocaleString() %>
                                                </td>
                                                
                                                <!-- <td >
                                                    &#8377 <%= order.orderPriceWODiscount - order.orderTotal%>
                                                </td> -->
                                                <td>
                                                    <% if ((order.orderProducts.totalPriceWithoutOffer - order.orderProducts.totalPrice)===0) { %>
                                                        nil
                                                        <% } else { %>
                                                            - â‚¹ <%= order.orderProducts.totalPriceWithoutOffer - order.orderProducts.totalPrice %>
                                                                <% } %>
                                                </td>
                                                <td>&#8377 <%= (order.orderProducts.totalPrice).toLocaleString() %>
                                                </td>
                                                

                                                <td>
                                                    <% if(order.paymentMethod===" razorPay" ) {%>

                                                        Razorpay
                                                        <% } else { %>
                                                            COD
                                                            <% } %>
                                                </td>

                                            </tr>
                                            <% }) %>


                                    </tbody>
                                </table>
                            </div>
                        </div> <!-- table-responsive end// -->
                        <div class="row">
                            <div class="col-md-7">

                            </div>
                            <div class="col-md-5" style="text-align: right; padding-right: 8%; padding-top: 3%;">
                                <div style="text-align: left;">
                                    <p>Total Delivered Orders: <span id="totalOrdersCount">
                                            <%= totalOrdersCount %>
                                        </span></p>
                                    <p>Total Amount Before Discounts: &#8377 <span id="totalPriceWithoutOfferSum">
                                            <%= totalPriceWithoutOfferSum.toLocaleString() %>
                                        </span></p>
                                    <p>Discounts: &#8377 <span id="offerDiscountSum">
                                            <%= offerDiscountSum.toLocaleString() %>
                                        </span></p>
                                    <p>Coupons: &#8377 <span id="couponDiscountSum">
                                            <%= couponDiscountSum.toLocaleString() %>
                                        </span></p>
                                    <hr>
                                    <p>Total Revenue After Discounts: &#8377 <span id="totalPriceSum">
                                            <%= (totalPriceSum-couponDiscountSum).toLocaleString() %>
                                        </span></p>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- pdf/excel download -->
                 <script>
                   

                    function excel() {
                        /* Retrieve table data */
                        var table = document.getElementById('pdfTable');
                        var tableData = [];
                        var rows = table.rows;
                        for (var i = 0; i < rows.length; i++) {
                            var rowData = [];
                            var cells = rows[i].cells;
                            for (var j = 0; j < cells.length; j++) {
                                rowData.push(cells[j].innerText);
                            }
                            tableData.push(rowData);
                        }

                        /* Convert table data to Excel file */
                        var worksheet = XLSX.utils.aoa_to_sheet(tableData);
                        var workbook = XLSX.utils.book_new();
                        XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');
                        var excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });

                        /* Save the Excel file */
                        saveAsExcelFile(excelBuffer, 'table_data.xlsx');
                    }

                    function saveAsExcelFile(buffer, fileName) {
                        var data = new Blob([buffer], { type: 'application/octet-stream' });
                        var url = window.URL.createObjectURL(data);
                        var link = document.createElement('a');
                        link.href = url;
                        link.download = fileName;
                        link.click();
                        setTimeout(function () {
                            window.URL.revokeObjectURL(url);
                        }, 100);
                    }

                    document.getElementById('generate-excel').addEventListener('click', excel);
                </script> 

                <script>
                    function updateReportDuration() {
                        var startDateInput = document.getElementById("start_date");
                        var endDateInput = document.getElementById("end_date");
                        var presetRangeSelect = document.getElementById("preset_range");
                        var reportDurationDiv = document.getElementById("report_duration");

                        if (presetRangeSelect.value) {
                            var presetRange = presetRangeSelect.value;
                            var endDate = new Date();
                            var startDate;

                            switch (presetRange) {
                                case "1_day":
                                    startDate = new Date(endDate);
                                    break;
                                case "1_week":
                                    startDate = new Date(endDate);
                                    startDate.setDate(startDate.getDate() - 7);
                                    break;
                                case "1_month":
                                    startDate = new Date(endDate);
                                    startDate.setMonth(startDate.getMonth() - 1);
                                    break;
                                case "1_year":
                                    startDate = new Date(endDate);
                                    startDate.setFullYear(startDate.getFullYear() - 1);
                                    break;
                                default:
                                    break;
                            }

                            startDateInput.value = startDate.toISOString().split('T')[0];
                            endDateInput.value = endDate.toISOString().split('T')[0];
                        }

                        if (startDateInput.value && endDateInput.value) {
                            reportDurationDiv.innerHTML = `Report Duration:${startDateInput.value} to ${endDateInput.value}`
                        } else {
                            reportDurationDiv.innerHTML = "";
                        }
                    }
                </script>

                <script>
                    document.getElementById('generate-report').addEventListener('click', generateReport);

                     generatePdfButton.addEventListener('click', (event) => {
                        let startDateInput = document.getElementById("start_date");
                        let endDateInput = document.getElementById("end_date");
                                event.preventDefault();
                                if (startDateInput.value && endDateInput.value) {
                                    // generatePDF()
                                } else {
                                    $.toast({
                                        heading: 'Error',
                                        text: 'Please select both start and end dates.',
                                        icon: 'error',
                                        position: "top-center",
                                        hideAfter: 5000
                                    });
                                }

                            });

                    async function generateReport() {
                        const startDate = document.getElementById('start_date').value;
                        const endDate = document.getElementById('end_date').value;

                        try {
                            if(!startDate || !endDate){
                                $.toast({
                                        heading: 'Error',
                                        text: 'Please select both start and end dates.',
                                        icon: 'error',
                                        position: "top-center",
                                        hideAfter: 5000
                                    });
                            }
                            const response = await fetch(`/admin/generate-sales-report`, {
                                method: 'POST',
                                body: JSON.stringify({ startDate, endDate }),

                                headers: {
                                    'Content-Type': 'application/json'
                                },
                            });

                            if (response.ok) {
                                const data = await response.json();
                                updateSalesReportTable(data);
                                updateSummaryData(data);

                            } else {
                                console.error('Error fetching sales report:', response.status);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    }




                    function updateSalesReportTable(data) {
                        const tbody = document.querySelector('#pdfTable tbody');
                        tbody.innerHTML = '';

                        data.allOrdersUnwinded.forEach((order, index) => {
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                                      <td class="text-center">${index + 1}</td>
                                      <td><a href="#" class="fw-bold">#${order.orderId}</a></td>
                                      <td>${order.orderProducts.prodDetails[0].productName.split(' ').slice(0, 3).join(' ')}</td>
                                      <td>${order.orderDate}</td>
                                      <td>${order.orderProducts.quantity}</td>
                                      <td>â‚¹${order.orderProducts.totalPriceWithoutOffer}</td>
                                      <td>${(order.orderProducts.totalPriceWithoutOffer - order.orderProducts.totalPrice) === 0 ? 'nil' : '- â‚¹' + (order.orderProducts.totalPriceWithoutOffer - order.orderProducts.totalPrice)}</td>
                                      <td>â‚¹${order.orderProducts.totalPrice}</td>
                                      <td>${order.paymentMethod === 'razorPay' ? 'Razorpay' : 'COD'}</td>
                                    `;
                            tbody.appendChild(tr);
                        });
                    }

                    function updateSummaryData(data) {
                        document.getElementById('totalOrdersCount').textContent = data.totalOrdersCount;
                        document.getElementById('totalPriceWithoutOfferSum').textContent = data.totalPriceWithoutOfferSum.toLocaleString();
                        document.getElementById('offerDiscountSum').textContent = data.offerDiscountSum.toLocaleString();
                        document.getElementById('couponDiscountSum').textContent = data.couponDiscountSum.toLocaleString();
                        document.getElementById('totalPriceSum').textContent = (data.totalPriceSum - data.couponDiscountSum).toLocaleString();
                    }
                </script>

                <!-- <script>
                    const startDateInput = document.getElementById('start_date');
                    const endDateInput = document.getElementById('end_date');
                    // const sortBySelect = document.getElementById('sort');
                    const tableBody = document.querySelector('.table tbody');
                    const generateReportButton = document.getElementById('generate-report');

                    generateReportButton.addEventListener('click', (event) => {
                        event.preventDefault();
                        if (startDateInput.value && endDateInput.value) {
                            updateTable();
                        } else {
                            $.toast({
                                heading: 'Error',
                                text: 'Please select both start and end dates.',
                                icon: 'error',
                                position: "top-center",
                                hideAfter: 5000
                            });
                        }

                    });

                    async function updateTable() {
                        const startDate = startDateInput.value;
                        const endDate = endDateInput.value;

                        try {
                            const response = await fetch('/admin/generate-sales-report', {
                                method: 'POST',
                                body: JSON.stringify({ startDate, endDate }),
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                            });

                            if (response.ok) {
                                const {
                                    allOrders,
                                    allOrdersUnwinded,
                                    allProducts,
                                    totalPriceSum,
                                    totalPriceWithoutOfferSum,
                                    allCategories,
                                    allUsers,
                                    statuses,
                                    ordersObj,
                                    totalOrdersAmount,
                                    offerDiscountSum,
                                    totalOrdersCount,
                                    numberOfDeliveredOrders,
                                    couponDiscountSum,
                                    startDate,
                                    endDate,
                                } = await response.json();

                                updateTableBody(
                                    allOrders,
                                    allOrdersUnwinded,
                                    allProducts,
                                    totalPriceSum,
                                    totalPriceWithoutOfferSum,
                                    allCategories,
                                    allUsers,
                                    statuses,
                                    ordersObj,
                                    totalOrdersAmount,
                                    offerDiscountSum,
                                    totalOrdersCount,
                                    numberOfDeliveredOrders,
                                    couponDiscountSum,
                                    startDate,
                                    endDate
                                );
                            } else {
                                // Handle error response
                                console.error('Error generating sales report:', response.status);
                            }
                        } catch (error) {
                            console.error('Error fetching sales report:', error);
                        }
                    }

                    function updateTableBody(
                        allOrders,
                        allOrdersUnwinded,
                        allProducts,
                        totalPriceSum,
                        totalPriceWithoutOfferSum,
                        allCategories,
                        allUsers,
                        statuses,
                        ordersObj,
                        totalOrdersAmount,
                        offerDiscountSum,
                        totalOrdersCount,
                        numberOfDeliveredOrders,
                        couponDiscountSum,
                        startDate,
                        endDate
                    ) {
                        // Clear the existing table body
                        tableBody.innerHTML = '';

                        // Iterate over the orders and add them to the table body
                        allOrdersUnwinded.forEach((order, index) => {
                            const row = document.createElement('tr');

                            let orderPriceWODiscountHTML = '';
                            if (order.orderProducts.totalPriceWithoutOffer - order.orderProducts.totalPrice === 0) {
                                orderPriceWODiscountHTML = 'nil';
                            } else {
                                orderPriceWODiscountHTML = `â‚¹ ${order.orderProducts.totalPriceWithoutOffer - order.orderProducts.totalPrice}`;
                            }

                            row.innerHTML = `
                      <td class="text-center">${index + 1}</td>
                      <td><a href="#" class="fw-bold">#${order.orderId}</a></td>
                      <td>${order.orderProducts.prodDetails[0].productName}</td>
                      <td>${order.orderDate}</td>
                      <td>â‚¹ ${order.orderProducts.totalPriceWithoutOffer.toLocaleString()}</td>
                      <td>${orderPriceWODiscountHTML}</td>
                      <td>â‚¹ ${order.orderProducts.totalPrice.toLocaleString()}</td>
                      <td>
                        ${order.paymentMethod === 'razorPay' ? 'Razorpay' : 'COD'}
                      </td>
                    `;

                            tableBody.appendChild(row);
                        });

                        // Update the text content of each span element with the updated values
                        totalOrdersAmountSpan.textContent = (totalPriceSum - couponDiscountSum).toLocaleString();
                        totalPriceWithoutOfferSumSpan.textContent = totalPriceWithoutOfferSum.toLocaleString();
                        couponDiscountSumSpan.textContent = couponDiscountSum.toLocaleString();
                        offerDiscountSumSpan.textContent = offerDiscountSum.toLocaleString();
                        totalOrdersCountSpan.textContent = totalOrdersCount;
                    }

                    document.addEventListener('DOMContentLoaded', function () {
                        const startDateInputCal = document.getElementById('start_date');
                        const endDateInputCal = document.getElementById('end_date');
                        const presetRangeSelect = document.getElementById('preset_range');

                        // Set default date for start date input to today
                        const today = new Date();
                        const yesterday = new Date(today);
                        yesterday.setDate(today.getDate() - 1); // Subtract 1 day from today's date
                        const tomorrow = new Date(today);
                        tomorrow.setDate(today.getDate() + 1); // Subtract 1 day from today's date

                        const todayString = today
                        const yesterdayString = yesterday
                        const tomorrowString = tomorrow
                        startDateInputCal.value = todayString;
                        endDateInputCal.value = tomorrowString;


                        // Add event listener to preset range select
                        presetRangeSelect.addEventListener('change', () => {
                            const selectedPreset = presetRangeSelect.value;
                            let startDate;
                            let endDate;

                            switch (selectedPreset) {
                                case '1_day':
                                    // endDate = todayString;
                                    endDate = new Date(today)
                                    endDate.setDate(today.getDate() + 1);
                                    endDate = endDate.toISOString().split('T')[0];

                                    startDate = new Date(today);
                                    startDate.setDate(today.getDate());
                                    startDate = startDate.toISOString().split('T')[0];

                                    break;
                                case '1_week':
                                    endDate = new Date(today)
                                    endDate.setDate(today.getDate() + 1);
                                    endDate = endDate.toISOString().split('T')[0];
                                    startDate = new Date(today);
                                    startDate.setDate(today.getDate() - 7);
                                    startDate = startDate.toISOString().split('T')[0];
                                    break;
                                case '1_month':
                                    endDate = new Date(today)
                                    endDate.setDate(today.getDate() + 1);
                                    endDate = endDate.toISOString().split('T')[0];
                                    startDate = new Date(today);
                                    startDate.setMonth(today.getMonth() - 1);
                                    startDate = startDate.toISOString().split('T')[0];
                                    break;
                                case '1_year':
                                    endDate = new Date(today)
                                    endDate.setDate(today.getDate() + 1);
                                    endDate = endDate.toISOString().split('T')[0];
                                    startDate = new Date(today);
                                    startDate.setFullYear(today.getFullYear() - 1);
                                    startDate = startDate.toISOString().split('T')[0];
                                    break;
                                // Add more cases for additional preset ranges if needed
                            }

                            // Set the start date and end date inputs
                            startDateInputCal.value = startDate;
                            endDateInputCal.value = endDate;
                        });
                    });


                </script> -->

            </div>




        </section> <!-- content-main end// -->

        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                        document.write(new Date().getFullYear())
                    </script> Â©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>

    <!-- For keeping the sales column heading intact while scrolling -->
    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const tableContainer = document.querySelector('.table-container');
            const table = document.querySelector('.table');
            const thead = document.querySelector('.table thead');

            tableContainer.addEventListener('scroll', () => {
                const scrollTop = tableContainer.scrollTop;
                thead.style.transform = `translateY(${scrollTop}px)`;
            });
        });
    </script>
    <script src="/admin/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/admin/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/admin/js/vendors/select2.min.js"></script>
    <script src="/admin/js/vendors/perfect-scrollbar.js"></script>
    <script src="/admin/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/admin/js/vendors/chart.js"></script>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
        crossorigin="anonymous"></script>
    <script src="https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js"></script>


    <!-- $.toast plugins -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/jquery-toast-plugin/1.3.2/jquery.toast.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-toast-plugin/1.3.2/jquery.toast.min.js"></script>



    <!-- for pdf & excel dwld -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.4/xlsx.full.min.js"></script>
    </head>
</body>

</html>