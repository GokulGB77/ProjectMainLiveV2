<%- include('../layouts/header.ejs',{userId:userId}) %>


    <div class="login-register-area pb-100 pt-95">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-md-12 offset-lg-2">
                    <div class="login-register-wrapper">
                        <div class="login-register-tab-list nav">
                            <h4> Register </h4>
                        </div>

                        <div id="lg2" class="tab-pane tab-content">
                            <div class="login-form-container">
                                <div class="login-register-form">
                                    <div id="error-message"></div>
                                    <form action="/register" method="post" id="registration-form"
                                        onsubmit="return validateForm()">
                                        <div class="mb-3">
                                            <label for="name" class="form-label">Name</label>
                                            <input type="text" class="form-control" id="name" name="name"
                                                oninput="validateName()" required>
                                            <span id="nameErrorMessage" style="color: red;"></span>
                                        </div>

                                        <div class="mb-3">
                                            <label for="email" class="form-label">Email</label>
                                            <input type="email" class="form-control" id="email" name="email"
                                                oninput="validateEmail()" required>
                                            <span id="emailErrorMessage" style="color: red;"></span>
                                        </div>
                                        <div class="mb-3">
                                            <label for="mobile" class="form-label">Mobile</label>
                                            <input type="tel" class="form-control" id="mobile" name="mobile" onchange=""
                                                oninput="validateMobile()" required>
                                            <span id="mobileErrorMessage" style="color: red;"></span>
                                        </div>

                                        <div class="mb-3">
                                            <label for="password" class="form-label">Password</label>
                                            <div class="password-input">
                                                <input type="password" class="form-control" id="password"
                                                    name="password" onblur="validatePassword()" required>
                                                <span class="toggle-password"
                                                    onclick="togglePasswordVisibility('password')"><i class="fa fa-eye"
                                                        aria-hidden="true"></i></span>
                                            </div>
                                            <span id="passwordErrorMessage" style="color: red;"></span>

                                        </div>
                                        <div class="mb-3">
                                            <label for="password" class="form-label">Confirm Password</label>
                                            <div class="password-input">
                                                <input type="password" class="form-control" id="confirmPassword"
                                                    name="confirmPassword" required oninput="confirmPassword()">
                                                <span class="toggle-password"
                                                    onclick="togglePasswordVisibility('confirmPassword')"> <i
                                                        class="fa fa-eye" aria-hidden="true"></i></span>
                                            </div>
                                            <span id="confirmPasswordErrorMessage" style="color: red;"></span>
                                        </div>
                                        <div class="button-box btn-hover text-center">
                                            <button type="submit">GENERATE OTP</button>
                                        </div>
                                        
                                       <div class="row" style="height: 100px;">
                                        <div class="mb-3  col-md-5">
                                            <div class="referral-input">
                                                <label for="referralCode" class="form-label">Referral Code</label>
                                                <input type="text" class="form-control" id="referralCode"
                                                    name="referralCode" oninput="showValidateBtn()">
                                                    <span id="referralCodeErrorMessage" style="color: red; "></span>
                                            </div>
                                        </div>
                                        <div class="button-box btn-hover text-center col-md-4" style=" height: 30px;margin-top: 40px;">
                                            <button id="validateButton" style="display: none; "
                                                onclick="validateReferral()">Validate</button>
                                        </div>
                                       </div>
                                       

                                </form>
                                        
                                        <script>
                                            document.getElementById("validateButton").addEventListener("click", function (e) {
                                                e.preventDefault()
                                                const referralCode = document.getElementById("referralCode").value;
                                                fetch('/admin/validate-referral-code', {
                                                    method: 'POST',
                                                    headers: {
                                                        'Content-Type': 'application/json'
                                                    },
                                                    body: JSON.stringify({ referralCode })
                                                })
                                                .then(response => {
                                                    if (!response.ok) {
                                                        throw new Error('Network response was not ok');
                                                    }
                                                   

                                                    return response.json();
                                                })
                                                .then(data => {
                                                    // Update the content of the span element with the message received from the server
                                                    const errorMessageSpan = document.getElementById("referralCodeErrorMessage");
                                                    errorMessageSpan.textContent = data.message;
                                                    errorMessageSpan.style.color = data.valid ? "green" : "red";
                                                    if(data.message=="Referral code is valid"){
                                                        var validateButton = document.getElementById("validateButton");
                                                        validateButton.style.display = "none";
                                                    }
                                                })
                                                .catch(error => {
                                                    console.error('There was a problem with the fetch operation:', error);
                                                });
                                            });
                                        </script>
                                        
                                        <script>
                                            function getQueryParam(param) {
                                                const queryString = window.location.search;
                                                const urlParams = new URLSearchParams(queryString);
                                                return urlParams.get(param);
                                            }
                                            function checkReferralCode() {
                                                const referralCode = getQueryParam('referral-code');
                                                if (referralCode) {
                                                    const referralCodeField = document.getElementById('referralCodeField');
                                                    referralCodeField.value = referralCode;
                                                    referralCodeField.disabled = true;
                                                }
                                            }
                                            window.onload = checkReferralCode;
                                        </script>
                                        <script>
                                            function showValidateBtn() {
                                                var referralCodeInput = document.getElementById("referralCode");
                                                var validateButton = document.getElementById("validateButton");
                                                referralCodeInput.value = referralCodeInput.value.toUpperCase();
                                                if (referralCodeInput.value.length > 5) {
                                                    referralCodeInput.value = referralCodeInput.value.slice(0, 5);
                                                }
                                                if (referralCodeInput.value.trim() !== "") {
                                                    validateButton.style.display = "block";
                                                } else {
                                                    validateButton.style.display = "none";
                                                }
                                            }
                                        </script>



                                        <script>
                                            function togglePasswordVisibility(inputId) {
                                                var passwordInput = document.getElementById(inputId);
                                                var toggleButton = document.querySelector('.toggle-password i');

                                                if (passwordInput.type === "password") {
                                                    passwordInput.type = "text";
                                                    toggleButton.classList.remove('fa-eye');
                                                    toggleButton.classList.add('fa-eye-slash');
                                                } else {
                                                    passwordInput.type = "password";
                                                    toggleButton.classList.remove('fa-eye-slash');
                                                    toggleButton.classList.add('fa-eye');
                                                }
                                            }

                                        </script>
                                        <style>
                                            .password-input {
                                                position: relative;
                                            }

                                            .toggle-password {
                                                position: absolute;
                                                right: 20px;
                                                top: 50%;
                                                transform: translateY(-65%);
                                                cursor: pointer;
                                            }
                                        </style>

                                        
                                    <% if (typeof message !=='undefined' ) { %>
                                        <p style="color: red;">
                                            <%= message %>
                                        </p>
                                        <% }; %>
                                            <hr class="my-4">
                                            <p>Already have an account? <a href="/login">Login</a></p>

                                            <p class="text-center small text-muted mb-15">or sign up with</p>
                                            <!-- <div class="g-signin2" data-onsuccess="onSignIn"></div>

                                            <script>
                                                function onSignIn(googleUser) {
                                                var profile = googleUser.getBasicProfile();
                                                console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
                                                console.log('Name: ' + profile.getName());
                                                console.log('Image URL: ' + profile.getImageUrl());
                                                console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
                                                }
                                            </script> -->
                                            <div class="d-grid gap-3 mb-4">
                                                <a href='/auth/google' class="btn w-100 btn-light font-sm">
                                                    <svg aria-hidden="true" class="icon-svg" width="20" height="20"
                                                        viewBox="0 0 20 20">
                                                        <path
                                                            d="M16.51 8H8.98v3h4.3c-.18 1-.74 1.48-1.6 2.04v2.01h2.6a7.8 7.8 0 002.38-5.88c0-.57-.05-.66-.15-1.18z"
                                                            fill="#4285F4"></path>
                                                        <path
                                                            d="M8.98 17c2.16 0 3.97-.72 5.3-1.94l-2.6-2a4.8 4.8 0 01-7.18-2.54H1.83v2.07A8 8 0 008.98 17z"
                                                            fill="#34A853"></path>
                                                        <path
                                                            d="M4.5 10.52a4.8 4.8 0 010-3.04V5.41H1.83a8 8 0 000 7.18l2.67-2.07z"
                                                            fill="#FBBC05"></path>
                                                        <path
                                                            d="M8.98 4.18c1.17 0 2.23.4 3.06 1.2l2.3-2.3A8 8 0 001.83 5.4L4.5 7.49a4.77 4.77 0 014.48-3.3z"
                                                            fill="#EA4335"></path>
                                                    </svg> Sign in using Google
                                                </a>
                                                <!-- <a href="#" class="btn w-100 btn-light font-sm">
                                                    <svg aria-hidden="true" class="icon-svg" width="20" height="20"
                                                        viewBox="0 0 20 20">
                                                        <path
                                                            d="M3 1a2 2 0 00-2 2v12c0 1.1.9 2 2 2h12a2 2 0 002-2V3a2 2 0 00-2-2H3zm6.55 16v-6.2H7.46V8.4h2.09V6.61c0-2.07 1.26-3.2 3.1-3.2.88 0 1.64.07 1.87.1v2.16h-1.29c-1 0-1.19.48-1.19 1.18V8.4h2.39l-.31 2.42h-2.08V17h-2.5z"
                                                            fill="#4167B2"></path>
                                                    </svg> Sign in using Facebook
                                                </a> -->
                                            </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>


    <script>
        // For Passwrod Validation
        function validatePassword() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const passwordErrorMessage = document.getElementById('passwordErrorMessage');
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

            if (password.length < 8) {
                passwordErrorMessage.textContent = 'Password must be at least 8 characters long';
            } else if (/\s/.test(password)) {
                passwordErrorMessage.textContent = 'Password should not contain spaces';
            } else if (!passwordRegex.test(password)) {
                passwordErrorMessage.textContent = 'Password should contain at least one lowercase letter, one uppercase letter, one number, and one special character from !@#$%^&*';
            } else {
                passwordErrorMessage.textContent = ''; // Remove the error message
                setTimeout(() => {
                    passwordErrorMessage.textContent = '';
                }, 2000); // Hide after 2 seconds
            }
        }

        document.getElementById('password').addEventListener('input', validatePassword);

        document.getElementById('password').addEventListener('focus', function () {
            document.getElementById('passwordErrorMessage').textContent = '';
        });


        function confirmPassword() {
            if (password !== confirmPassword) {
                confirmPasswordErrorMessage.textContent = 'Password does not match';
            }
        }

        function validateMobile() {
            const mobileNumber = document.getElementById('mobile').value;
            const mobileErrorMessage = document.getElementById('mobileErrorMessage');
            const mobileRegex = /^[0-9]{10}$/;
            const allSameRegex = /^(\d)\1+$/;

            if (mobileNumber.trim() === '') {
                mobileErrorMessage.textContent = 'Mobile number should not be blank';
            } else if (!/^\d+$/.test(mobileNumber)) {
                mobileErrorMessage.textContent = 'Mobile number can only contain digits';
            } else if (/\s/.test(mobileNumber)) {
                mobileErrorMessage.textContent = 'Mobile number should not contain spaces';
            } else if (!mobileRegex.test(mobileNumber)) {
                mobileErrorMessage.textContent = 'Mobile number should be 10 digits';
            } else if (allSameRegex.test(mobileNumber)) {
                mobileErrorMessage.textContent = 'All digits in the mobile number should not be the same';
            } else {
                mobileErrorMessage.textContent = '';
            }
        }


        function validateEmail() {
            const email = document.getElementById('email').value;
            const emailErrorMessage = document.getElementById('emailErrorMessage');
            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

            if (!emailRegex.test(email)) {
                emailErrorMessage.textContent = 'Email should be in format example@example.com';
            } else if (!/^[\w@.]+$/.test(email)) {
                emailErrorMessage.textContent = 'Email can only contain letters, digits, underscores, @, and periods';
            } else if (email.split('@').length > 2) {
                emailErrorMessage.textContent = 'Only one "@" symbol is allowed';
            } else if (email.split('.').length > 2) {
                emailErrorMessage.textContent = 'Only one "." symbol is allowed after "@"';
            } else {
                emailErrorMessage.textContent = ''; // Remove the error message
            }
        }

        function validateName() {
            let name = document.getElementById('name').value;
            const nameErrorMessage = document.getElementById('nameErrorMessage');

            // Remove leading and trailing spaces
            name = name.trim();

            // Condition: Should not be all spaces
            if (name.length === 0) {
                nameErrorMessage.textContent = 'Name should not be empty or contain only spaces';
            }
            // Condition: Should contain only characters and not any special characters
            else if (!/^[a-zA-Z\s]+$/.test(name)) {
                nameErrorMessage.textContent = 'Name should contain only letters';
            }
            // Condition: All characters shouldn't be the same
            else if (/^(\w)\1+$/.test(name)) {
                nameErrorMessage.textContent = 'Name should not contain all same characters';
            }
            // Add more conditions for checking if it's a valid name based on specific requirements

            else {
                // Capitalize the first character and characters after space
                name = name.replace(/\b\w/g, char => char.toUpperCase());
                document.getElementById('name').value = name;
                nameErrorMessage.textContent = ''; // Remove the error message
            }
        }





    </script>

    <!-- <script>
                function validateForm() {
                    // Validate name
                    if (!validateName()) {
                        alert('Enter a Valid Name');
                        return false;
                    }

                    // Validate email
                    if (!validateEmail()) {
                        alert('Enter Valid Email');
                        return false;
                    }

                    // Validate mobile
                    if (!validateMobile()) {
                        alert('Enter Valid Mobile Number');
                        return false;
                    }

                    // Validate password
                    if (!validatePassword()) {
                        alert('Enter Valid Password');
                        return false;
                    }

                    // Validate confirm password
                    if (!confirmPassword()) {
                        alert('Passwords do not match');
                        return false;
                    }

                    // All validations passed
                    return true;
                }
            </script> -->




    <%- include('../layouts/footer.ejs',{userId:userId}) %>